// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Broker.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace vivego.ProtoBroker.Messages {

  /// <summary>Holder for reflection information generated from Broker.proto</summary>
  public static partial class BrokerReflection {

    #region Descriptor
    /// <summary>File descriptor for Broker.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BrokerReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxCcm9rZXIucHJvdG8SEnZpdmVnby5Qcm90b0Jyb2tlchoMUHJvdG9zLnBy",
            "b3RvIhIKEEdldFB1Ymxpc2hlclBpRHMiNAoYR2V0UHVibGlzaGVyUGlEc1Jl",
            "c3BvbnNlEhgKBFBJZHMYASADKAsyCi5hY3Rvci5QSUQiSwoJU3Vic2NyaWJl",
            "EiEKDUNvbnN1bWVyQWN0b3IYASABKAsyCi5hY3Rvci5QSUQSDAoEVHlwZRgC",
            "IAEoCRINCgVUb3BpYxgDIAEoCSJZCgxTdWJzY3JpcHRpb24SFgoOU3Vic2Ny",
            "aXB0aW9uSWQYASABKAwSMQoKU3Vic2NyaWJlchgCIAEoCzIdLnZpdmVnby5Q",
            "cm90b0Jyb2tlci5TdWJzY3JpYmUiJgoMU3Vic2NyaWJlQWNrEhYKDlN1YnNj",
            "cmlwdGlvbklkGAEgASgMIiUKC1Vuc3Vic2NyaWJlEhYKDlN1YnNjcmlwdGlv",
            "bklkGAEgASgMIiEKDlVuc3Vic2NyaWJlQWNrEg8KB1N1Y2Nlc3MYASABKAgi",
            "KQoHUHVibGlzaBINCgVUb3BpYxgBIAEoCRIPCgdNZXNzYWdlGAIgASgMQh6q",
            "Aht2aXZlZ28uUHJvdG9Ccm9rZXIuTWVzc2FnZXNiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Proto.ProtosReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::vivego.ProtoBroker.Messages.GetPublisherPiDs), global::vivego.ProtoBroker.Messages.GetPublisherPiDs.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::vivego.ProtoBroker.Messages.GetPublisherPiDsResponse), global::vivego.ProtoBroker.Messages.GetPublisherPiDsResponse.Parser, new[]{ "PIds" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::vivego.ProtoBroker.Messages.Subscribe), global::vivego.ProtoBroker.Messages.Subscribe.Parser, new[]{ "ConsumerActor", "Type", "Topic" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::vivego.ProtoBroker.Messages.Subscription), global::vivego.ProtoBroker.Messages.Subscription.Parser, new[]{ "SubscriptionId", "Subscriber" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::vivego.ProtoBroker.Messages.SubscribeAck), global::vivego.ProtoBroker.Messages.SubscribeAck.Parser, new[]{ "SubscriptionId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::vivego.ProtoBroker.Messages.Unsubscribe), global::vivego.ProtoBroker.Messages.Unsubscribe.Parser, new[]{ "SubscriptionId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::vivego.ProtoBroker.Messages.UnsubscribeAck), global::vivego.ProtoBroker.Messages.UnsubscribeAck.Parser, new[]{ "Success" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::vivego.ProtoBroker.Messages.Publish), global::vivego.ProtoBroker.Messages.Publish.Parser, new[]{ "Topic", "Message" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GetPublisherPiDs : pb::IMessage<GetPublisherPiDs> {
    private static readonly pb::MessageParser<GetPublisherPiDs> _parser = new pb::MessageParser<GetPublisherPiDs>(() => new GetPublisherPiDs());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetPublisherPiDs> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::vivego.ProtoBroker.Messages.BrokerReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPublisherPiDs() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPublisherPiDs(GetPublisherPiDs other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPublisherPiDs Clone() {
      return new GetPublisherPiDs(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetPublisherPiDs);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetPublisherPiDs other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetPublisherPiDs other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed partial class GetPublisherPiDsResponse : pb::IMessage<GetPublisherPiDsResponse> {
    private static readonly pb::MessageParser<GetPublisherPiDsResponse> _parser = new pb::MessageParser<GetPublisherPiDsResponse>(() => new GetPublisherPiDsResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetPublisherPiDsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::vivego.ProtoBroker.Messages.BrokerReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPublisherPiDsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPublisherPiDsResponse(GetPublisherPiDsResponse other) : this() {
      pIds_ = other.pIds_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPublisherPiDsResponse Clone() {
      return new GetPublisherPiDsResponse(this);
    }

    /// <summary>Field number for the "PIds" field.</summary>
    public const int PIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Proto.PID> _repeated_pIds_codec
        = pb::FieldCodec.ForMessage(10, global::Proto.PID.Parser);
    private readonly pbc::RepeatedField<global::Proto.PID> pIds_ = new pbc::RepeatedField<global::Proto.PID>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Proto.PID> PIds {
      get { return pIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetPublisherPiDsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetPublisherPiDsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!pIds_.Equals(other.pIds_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= pIds_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      pIds_.WriteTo(output, _repeated_pIds_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += pIds_.CalculateSize(_repeated_pIds_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetPublisherPiDsResponse other) {
      if (other == null) {
        return;
      }
      pIds_.Add(other.pIds_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            pIds_.AddEntriesFrom(input, _repeated_pIds_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Subscribe : pb::IMessage<Subscribe> {
    private static readonly pb::MessageParser<Subscribe> _parser = new pb::MessageParser<Subscribe>(() => new Subscribe());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Subscribe> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::vivego.ProtoBroker.Messages.BrokerReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Subscribe() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Subscribe(Subscribe other) : this() {
      ConsumerActor = other.consumerActor_ != null ? other.ConsumerActor.Clone() : null;
      type_ = other.type_;
      topic_ = other.topic_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Subscribe Clone() {
      return new Subscribe(this);
    }

    /// <summary>Field number for the "ConsumerActor" field.</summary>
    public const int ConsumerActorFieldNumber = 1;
    private global::Proto.PID consumerActor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto.PID ConsumerActor {
      get { return consumerActor_; }
      set {
        consumerActor_ = value;
      }
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 2;
    private string type_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Topic" field.</summary>
    public const int TopicFieldNumber = 3;
    private string topic_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Topic {
      get { return topic_; }
      set {
        topic_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Subscribe);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Subscribe other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ConsumerActor, other.ConsumerActor)) return false;
      if (Type != other.Type) return false;
      if (Topic != other.Topic) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (consumerActor_ != null) hash ^= ConsumerActor.GetHashCode();
      if (Type.Length != 0) hash ^= Type.GetHashCode();
      if (Topic.Length != 0) hash ^= Topic.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (consumerActor_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ConsumerActor);
      }
      if (Type.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Type);
      }
      if (Topic.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Topic);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (consumerActor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConsumerActor);
      }
      if (Type.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (Topic.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Topic);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Subscribe other) {
      if (other == null) {
        return;
      }
      if (other.consumerActor_ != null) {
        if (consumerActor_ == null) {
          consumerActor_ = new global::Proto.PID();
        }
        ConsumerActor.MergeFrom(other.ConsumerActor);
      }
      if (other.Type.Length != 0) {
        Type = other.Type;
      }
      if (other.Topic.Length != 0) {
        Topic = other.Topic;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (consumerActor_ == null) {
              consumerActor_ = new global::Proto.PID();
            }
            input.ReadMessage(consumerActor_);
            break;
          }
          case 18: {
            Type = input.ReadString();
            break;
          }
          case 26: {
            Topic = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Subscription : pb::IMessage<Subscription> {
    private static readonly pb::MessageParser<Subscription> _parser = new pb::MessageParser<Subscription>(() => new Subscription());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Subscription> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::vivego.ProtoBroker.Messages.BrokerReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Subscription() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Subscription(Subscription other) : this() {
      subscriptionId_ = other.subscriptionId_;
      Subscriber = other.subscriber_ != null ? other.Subscriber.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Subscription Clone() {
      return new Subscription(this);
    }

    /// <summary>Field number for the "SubscriptionId" field.</summary>
    public const int SubscriptionIdFieldNumber = 1;
    private pb::ByteString subscriptionId_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString SubscriptionId {
      get { return subscriptionId_; }
      set {
        subscriptionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Subscriber" field.</summary>
    public const int SubscriberFieldNumber = 2;
    private global::vivego.ProtoBroker.Messages.Subscribe subscriber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::vivego.ProtoBroker.Messages.Subscribe Subscriber {
      get { return subscriber_; }
      set {
        subscriber_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Subscription);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Subscription other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SubscriptionId != other.SubscriptionId) return false;
      if (!object.Equals(Subscriber, other.Subscriber)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SubscriptionId.Length != 0) hash ^= SubscriptionId.GetHashCode();
      if (subscriber_ != null) hash ^= Subscriber.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SubscriptionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(SubscriptionId);
      }
      if (subscriber_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Subscriber);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SubscriptionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(SubscriptionId);
      }
      if (subscriber_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Subscriber);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Subscription other) {
      if (other == null) {
        return;
      }
      if (other.SubscriptionId.Length != 0) {
        SubscriptionId = other.SubscriptionId;
      }
      if (other.subscriber_ != null) {
        if (subscriber_ == null) {
          subscriber_ = new global::vivego.ProtoBroker.Messages.Subscribe();
        }
        Subscriber.MergeFrom(other.Subscriber);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            SubscriptionId = input.ReadBytes();
            break;
          }
          case 18: {
            if (subscriber_ == null) {
              subscriber_ = new global::vivego.ProtoBroker.Messages.Subscribe();
            }
            input.ReadMessage(subscriber_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SubscribeAck : pb::IMessage<SubscribeAck> {
    private static readonly pb::MessageParser<SubscribeAck> _parser = new pb::MessageParser<SubscribeAck>(() => new SubscribeAck());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubscribeAck> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::vivego.ProtoBroker.Messages.BrokerReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeAck() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeAck(SubscribeAck other) : this() {
      subscriptionId_ = other.subscriptionId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeAck Clone() {
      return new SubscribeAck(this);
    }

    /// <summary>Field number for the "SubscriptionId" field.</summary>
    public const int SubscriptionIdFieldNumber = 1;
    private pb::ByteString subscriptionId_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString SubscriptionId {
      get { return subscriptionId_; }
      set {
        subscriptionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubscribeAck);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubscribeAck other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SubscriptionId != other.SubscriptionId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SubscriptionId.Length != 0) hash ^= SubscriptionId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SubscriptionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(SubscriptionId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SubscriptionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(SubscriptionId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubscribeAck other) {
      if (other == null) {
        return;
      }
      if (other.SubscriptionId.Length != 0) {
        SubscriptionId = other.SubscriptionId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            SubscriptionId = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Unsubscribe : pb::IMessage<Unsubscribe> {
    private static readonly pb::MessageParser<Unsubscribe> _parser = new pb::MessageParser<Unsubscribe>(() => new Unsubscribe());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Unsubscribe> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::vivego.ProtoBroker.Messages.BrokerReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Unsubscribe() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Unsubscribe(Unsubscribe other) : this() {
      subscriptionId_ = other.subscriptionId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Unsubscribe Clone() {
      return new Unsubscribe(this);
    }

    /// <summary>Field number for the "SubscriptionId" field.</summary>
    public const int SubscriptionIdFieldNumber = 1;
    private pb::ByteString subscriptionId_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString SubscriptionId {
      get { return subscriptionId_; }
      set {
        subscriptionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Unsubscribe);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Unsubscribe other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SubscriptionId != other.SubscriptionId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SubscriptionId.Length != 0) hash ^= SubscriptionId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SubscriptionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(SubscriptionId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SubscriptionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(SubscriptionId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Unsubscribe other) {
      if (other == null) {
        return;
      }
      if (other.SubscriptionId.Length != 0) {
        SubscriptionId = other.SubscriptionId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            SubscriptionId = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UnsubscribeAck : pb::IMessage<UnsubscribeAck> {
    private static readonly pb::MessageParser<UnsubscribeAck> _parser = new pb::MessageParser<UnsubscribeAck>(() => new UnsubscribeAck());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnsubscribeAck> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::vivego.ProtoBroker.Messages.BrokerReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnsubscribeAck() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnsubscribeAck(UnsubscribeAck other) : this() {
      success_ = other.success_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnsubscribeAck Clone() {
      return new UnsubscribeAck(this);
    }

    /// <summary>Field number for the "Success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnsubscribeAck);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnsubscribeAck other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnsubscribeAck other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Publish : pb::IMessage<Publish> {
    private static readonly pb::MessageParser<Publish> _parser = new pb::MessageParser<Publish>(() => new Publish());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Publish> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::vivego.ProtoBroker.Messages.BrokerReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Publish() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Publish(Publish other) : this() {
      topic_ = other.topic_;
      message_ = other.message_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Publish Clone() {
      return new Publish(this);
    }

    /// <summary>Field number for the "Topic" field.</summary>
    public const int TopicFieldNumber = 1;
    private string topic_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Topic {
      get { return topic_; }
      set {
        topic_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Message" field.</summary>
    public const int MessageFieldNumber = 2;
    private pb::ByteString message_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Publish);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Publish other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Topic != other.Topic) return false;
      if (Message != other.Message) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Topic.Length != 0) hash ^= Topic.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Topic.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Topic);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Message);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Topic.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Topic);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Message);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Publish other) {
      if (other == null) {
        return;
      }
      if (other.Topic.Length != 0) {
        Topic = other.Topic;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Topic = input.ReadString();
            break;
          }
          case 18: {
            Message = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
